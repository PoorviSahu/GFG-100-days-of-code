// https://practice.geeksforgeeks.org/problems/n-meetings-in-one-room-1587115620/1

#include <bits/stdc++.h>
using namespace std;

class Solution
{
    public:
    int maxMeetings(int start[], int end[], int n)
    {
        int count=1;
        vector<pair<int,int>> time;
        
        for(int i=0;i<n;i++)
        
        time.push_back(make_pair(end[i],start[i]));
        
        sort(time.begin(), time.end()); 
        
        int pre_end_time = time[0].first;
        
        for(int i=1;i<n;i++){
        
        if(pre_end_time<time[i].second){
            count++;
            pre_end_time=time[i].first;
        }
        }
        return count;
    }
    
};

int main() {
    int t;
    cin >> t;
    while (t--) {
        int n;
        cin >> n;
        int start[n], end[n];
        for (int i = 0; i < n; i++) cin >> start[i];

        for (int i = 0; i < n; i++) cin >> end[i];

        Solution ob;
        int ans = ob.maxMeetings(start, end, n);
        cout << ans << endl;
    }
    return 0;
}
